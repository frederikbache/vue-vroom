import{_ as s,o as a,c as n,a as l}from"./app.3ac53504.js";const h=JSON.parse('{"title":"FetchList","description":"","frontmatter":{},"headers":[{"level":2,"title":"Slots","slug":"slots","link":"#slots","children":[]},{"level":2,"title":"Meta","slug":"meta","link":"#meta","children":[]},{"level":2,"title":"Getting meta from ready event","slug":"getting-meta-from-ready-event","link":"#getting-meta-from-ready-event","children":[]},{"level":2,"title":"Updates and subscriptions","slug":"updates-and-subscriptions","link":"#updates-and-subscriptions","children":[]}],"relativePath":"guide/fetching/fetch-list.md"}'),o={name:"guide/fetching/fetch-list.md"},e=l(`<h1 id="fetchlist" tabindex="-1">FetchList <a class="header-anchor" href="#fetchlist" aria-hidden="true">#</a></h1><p>The most typical way to interact with your api in Vroom is to fetch and show lists of content. For that use the <code>FetchList</code> component. It supports</p><ul><li>Sorting</li><li>Pagination</li><li>Filtering</li><li>Including relations</li></ul><p>See the next few pages for details on how these work</p><div class="language-vue"><button class="copy"></button><span class="lang">vue</span><pre><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">FetchList</span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#C792EA;">model</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">book</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">        :</span><span style="color:#C792EA;">include</span><span style="color:#89DDFF;">=[</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">author</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">, </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">genre</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">]</span></span>
<span class="line"><span style="color:#89DDFF;">        :</span><span style="color:#C792EA;">pagination</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">{ </span><span style="color:#F07178;">page</span><span style="color:#89DDFF;">: </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">, </span><span style="color:#F07178;">limit</span><span style="color:#89DDFF;">: </span><span style="color:#F78C6C;">10</span><span style="color:#89DDFF;"> }</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">        :</span><span style="color:#C792EA;">filter</span><span style="color:#89DDFF;">={ </span><span style="color:#C792EA;">genreId:</span><span style="color:#89DDFF;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">1</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;"> }</span></span>
<span class="line"><span style="color:#89DDFF;">    &gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;"> #</span><span style="color:#C792EA;">default</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">{ </span><span style="color:#A6ACCD;">bookItems</span><span style="color:#89DDFF;">, </span><span style="color:#A6ACCD;">meta</span><span style="color:#89DDFF;"> }</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;/</span><span style="color:#FFCB6B;">FetchList</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span></code></pre></div><h2 id="slots" tabindex="-1">Slots <a class="header-anchor" href="#slots" aria-hidden="true">#</a></h2><p>The component has three slots</p><ul><li><code>default</code> will be shown when the item is successfully loaded. It will receive two <code>slotProps</code><ul><li><code>[model]Items</code>: the items received from the api</li><li><code>meta</code> information regarding pagination + some helpful functions</li></ul></li><li><code>loading</code> shown while loading (the first time)</li><li><code>failed</code> shown when the request failed</li></ul><p>If you add the <code>load-on-update</code> attribute, the loading slot will be shown every time the component refetches</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>Note that a FetchList is always locked to the ids it received from the api. That means that the list will not automatically update if you create a new item in a relation (e.g. using <code>vroom.db.book.create()</code>). To get the list to update you can use one of the methods supplied by <code>meta</code></p></div><h2 id="meta" tabindex="-1">Meta <a class="header-anchor" href="#meta" aria-hidden="true">#</a></h2><p>The meta object contains some data and some helpful methods</p><p><strong>Pagination</strong></p><ul><li><code>nextCursor</code> - when using cursor based pagination, this will supply the id of the next item (if any)</li><li><code>page</code> - when using page based pagination, this will supply the current page</li><li><code>pages</code> - when using page based pagination, this will supply the total amount of pages</li><li><code>results</code> - when using page based pagination, this will supply the total amount of results</li></ul><p><strong>Methods</strong></p><ul><li><code>refresh</code> - calling this will make the list refetch using current settings</li><li><code>pushId</code> - takes an id and pushes it to the list (does not trigger refetch)</li><li><code>create</code> - takes some data, creates a new item, and pushes the id (does not trigger refetch)</li></ul><h2 id="getting-meta-from-ready-event" tabindex="-1">Getting meta from ready event <a class="header-anchor" href="#getting-meta-from-ready-event" aria-hidden="true">#</a></h2><p>You always have access to meta within the default slot, but you can also access it from the <code>ready</code> event on the list (e.g. if you want to save it into a ref for later use)</p><div class="language-vue"><button class="copy"></button><span class="lang">vue</span><pre><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">FetchList</span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#C792EA;">model</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">book</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">        :</span><span style="color:#C792EA;">include</span><span style="color:#89DDFF;">=[</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">author</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">, </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">genre</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">]</span></span>
<span class="line"><span style="color:#89DDFF;">        :</span><span style="color:#C792EA;">pagination</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">{ </span><span style="color:#F07178;">page</span><span style="color:#89DDFF;">: </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">, </span><span style="color:#F07178;">limit</span><span style="color:#89DDFF;">: </span><span style="color:#F78C6C;">10</span><span style="color:#89DDFF;"> }</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">        :</span><span style="color:#C792EA;">filter</span><span style="color:#89DDFF;">={ </span><span style="color:#C792EA;">genreId:</span><span style="color:#89DDFF;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">1</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;"> }</span></span>
<span class="line"><span style="color:#89DDFF;">        @</span><span style="color:#C792EA;">ready</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">meta</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#89DDFF;"> </span><span style="color:#A6ACCD;">refresh</span><span style="color:#89DDFF;"> = </span><span style="color:#A6ACCD;">meta</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">refresh</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">    &gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;"> #</span><span style="color:#C792EA;">default</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">{ </span><span style="color:#A6ACCD;">bookItems</span><span style="color:#89DDFF;">, </span><span style="color:#A6ACCD;">meta</span><span style="color:#89DDFF;"> }</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;/</span><span style="color:#FFCB6B;">FetchList</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">button</span><span style="color:#89DDFF;"> @</span><span style="color:#C792EA;">click</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">refreshList</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">Refresh</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">button</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">script</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">lang</span><span style="color:#A6ACCD;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">ts</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">setup</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">ref</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">vue</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> refresh </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">ref</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">null</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">as</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Function</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">null</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">refreshList</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">if</span><span style="color:#F07178;"> (</span><span style="color:#A6ACCD;">refresh</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">value</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#A6ACCD;">refresh</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">value</span><span style="color:#F07178;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span></code></pre></div><h2 id="updates-and-subscriptions" tabindex="-1">Updates and subscriptions <a class="header-anchor" href="#updates-and-subscriptions" aria-hidden="true">#</a></h2><p>The component will subscribe to the ids of the items it receives, making sure they will be kept in the store until the component is unmounted.</p><p>The component will trigger a fetch if the sort, pagination, filters or includes changes (and will update its subscriptions)</p>`,22),p=[e];function t(c,r,F,D,i,y){return a(),n("div",null,p)}const u=s(o,[["render",t]]);export{h as __pageData,u as default};
