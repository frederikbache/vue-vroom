import{_ as s,o as a,c as n,a as e}from"./app.4370c4cc.js";const u=JSON.parse('{"title":"Config","description":"","frontmatter":{},"headers":[{"level":2,"title":"Base url","slug":"base-url","link":"#base-url","children":[]},{"level":2,"title":"Id settings","slug":"id-settings","link":"#id-settings","children":[{"level":3,"title":"idsAreNumbers","slug":"idsarenumbers","link":"#idsarenumbers","children":[]},{"level":3,"title":"idFactory","slug":"idfactory","link":"#idfactory","children":[]}]}],"relativePath":"guide/intro/config.md"}'),l={name:"guide/intro/config.md"},p=e(`<h1 id="config" tabindex="-1">Config <a class="header-anchor" href="#config" aria-hidden="true">#</a></h1><h2 id="base-url" tabindex="-1">Base url <a class="header-anchor" href="#base-url" aria-hidden="true">#</a></h2><div class="language-typescript"><button class="copy"></button><span class="lang">typescript</span><pre><code><span class="line"><span style="color:#82AAFF;">createVroom</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;">// ...</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">baseURL</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">https://loremipsum.com/api</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;">// ...</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span></code></pre></div><h2 id="id-settings" tabindex="-1">Id settings <a class="header-anchor" href="#id-settings" aria-hidden="true">#</a></h2><p>You can customise the type and content of the id&#39;s in your db. As default id&#39;s will be incremental numbers formatted as strings</p><h3 id="idsarenumbers" tabindex="-1">idsAreNumbers <a class="header-anchor" href="#idsarenumbers" aria-hidden="true">#</a></h3><p>If you set <code>idsAreNumbers</code> to <code>true</code> all id&#39;s in the database will become incremental integers</p><div class="language-typescript"><button class="copy"></button><span class="lang">typescript</span><pre><code><span class="line"><span style="color:#82AAFF;">createVroom</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;">// ...</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">idsAreNumbers</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">true</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;">// ...</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span></code></pre></div><h3 id="idfactory" tabindex="-1">idFactory <a class="header-anchor" href="#idfactory" aria-hidden="true">#</a></h3><p>For string id&#39;s you can pass a function that generates a string</p><div class="language-typescript"><button class="copy"></button><span class="lang">typescript</span><pre><code><span class="line"><span style="color:#82AAFF;">createVroom</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;">// ...</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">idFactory</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">i</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">number</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">return</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">\`</span><span style="color:#C3E88D;">#</span><span style="color:#89DDFF;">\${</span><span style="color:#A6ACCD;">i</span><span style="color:#89DDFF;">}\`</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;">// ...</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span></code></pre></div>`,11),o=[p];function t(r,c,i,d,y,F){return a(),n("div",null,o)}const A=s(l,[["render",t]]);export{u as __pageData,A as default};
