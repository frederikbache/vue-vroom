import{_ as s,o as a,c as n,a as e}from"./app.95b5cb64.js";const A=JSON.parse('{"title":"API config","description":"","frontmatter":{},"headers":[{"level":2,"title":"Global header","slug":"global-header","link":"#global-header","children":[]},{"level":2,"title":"Error interceptor","slug":"error-interceptor","link":"#error-interceptor","children":[]}],"relativePath":"guide/intro/api.md"}'),o={name:"guide/intro/api.md"},l=e(`<h1 id="api-config" tabindex="-1">API config <a class="header-anchor" href="#api-config" aria-hidden="true">#</a></h1><p>Vroom creates an api helper for you which can be accessed on <code>vroom.api</code>.</p><h2 id="global-header" tabindex="-1">Global header <a class="header-anchor" href="#global-header" aria-hidden="true">#</a></h2><div class="language-typescript"><button class="copy"></button><span class="lang">typescript</span><pre><code><span class="line"><span style="color:#676E95;">// Setting global headers</span></span>
<span class="line"><span style="color:#A6ACCD;">vroom</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">api</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">headers[</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">authorization</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">] </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">Bearer 123456</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"></span></code></pre></div><h2 id="error-interceptor" tabindex="-1">Error interceptor <a class="header-anchor" href="#error-interceptor" aria-hidden="true">#</a></h2><div class="language-typescript"><button class="copy"></button><span class="lang">typescript</span><pre><code><span class="line"><span style="color:#676E95;">// Adding an error interceptor</span></span>
<span class="line"><span style="color:#A6ACCD;">vroom</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">api</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">intercept</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">error</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">e</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">Intercepted error</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">e</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">status</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">e</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">data</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div>`,6),p=[l];function r(t,c,i,D,y,d){return a(),n("div",null,p)}const C=s(o,[["render",r]]);export{A as __pageData,C as default};
